Source: pmccabe
Section: devel
Priority: optional
Maintainer: Paul Bame <bame@debian.org>
Build-Depends: debhelper (>> 5.0.0)
Standards-Version: 3.9.1

Package: pmccabe
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: McCabe-style function complexity and line counting for C and C++
 Pmccabe calculates McCabe-style cyclomatic complexity for C and C++
 source code.  Per-function complexity may be used for spotting likely
 trouble spots and for estimating testing effort.
 .
 Pmccabe also includes a non-commented line counter compatible with anac,
 'decomment' which only removes comments from source code; 'codechanges',
 a program to calculate the amount of change which has occurred between
 two source trees or files; and 'vifn', to invoke 'vi' given a function
 name rather than a file name.
 .
 Pmccabe attempts to calculate the apparent complexity rather
 than the complexity following the C++ and/or cpp preprocessors.
 This causes Pmccabe to become confused with cpp constructs which
 cause unmatched curly braces - most of which can profitably be
 rewritten so they won't confuse prettyprinters anyway.  Pmccabe prints
 C-compiler-style error messages when the parser gets confused so they
 may be browsed with standard tools.
 .
 Two types of cyclomatic complexity are generated - one type counts
 each switch() statement as regardless of the number of cases included and
 the other more traditional measure counts each case within the switch().
 Pmccabe also calculates the starting line for each function, the number of
 lines consumed by the function, and the number of C statements within the
 function.
